"""
Django settings for SNR project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import django
from django.utils.encoding import smart_str
django.utils.encoding.smart_text = smart_str

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#u#9-1dttxl=y2-lfdxsh3udk+k51lyf9z5500@mva4w*(8sus'

##Changing
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.postgres',
    'corsheaders',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django_cron',
    'mobile.apps.MobileConfig',
    'laptop.apps.LaptopsConfig',
    'wearables.apps.WearablesConfig',
    'Search.apps.SearchConfig',
    'products.apps.ProductsConfig',
    'userReviews.apps.UserreviewsConfig',
    'credential.apps.CredentialConfig',
    'feedback.apps.FeedbackConfig',
    # 'social_django',  # <--
    'trends.apps.TrendsConfig',
    'django.contrib.staticfiles',
    'newdb',
    'rest_framework',
    'social.apps.SocialConfig',
    'tube.apps.TubeConfig',
    'categories',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',  # <--
]

CRON_CLASSES = [
    "dailydeals.MyCronJob",
    # "refresh_cat_ table.cron.MyCronJob",
    # "crontesting.MyCronJob",
    # "maindata.cron.MyCronJob",

]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'infoshoproar@gmail.com'
# EMAIL_HOST_PASSWORD = 'goingtoin1122'

EMAIL_USE_TLS = True
EMAIL_HOST = 'bplmail.brainwade.com'
EMAIL_PORT = 587

# EMAIL_HOST_USER = 'admin@shopnraor.com '
# EMAIL_HOST_USER = 'admin@shopnraor.com '
# EMAIL_HOST_USER = 'contact@shopnroar.com'

EMAIL_HOST_USER = 'no-reply@shopnroar.com'
EMAIL_HOST_PASSWORD = '$tY5reW89&6R'
# DEFAULT_FROM_EMAIL = 'TEAMSHOPnROAR@shopnroar.com'
# DEFAULT_FROM_EMAIL = 'SHOPnROAR <no-reply@shopnroar.com>'
DEFAULT_FROM_EMAIL = 'BUYnROAR <no-reply@shopnroar.com>'

# EMAIL_HOST_USER = 'admin@shopnroar.com'
# EMAIL_HOST_PASSWORD = '123456'


# Below credentials are for your information:
#
# smtp/mail server: bplmail.shopnroar.com
# smtp/mta port: 587 (Mail submission over TLS)
# Login: https://bplmail.shopnroar.com/
# Email: admin@shopnraor.com
# Email 2: contact@shopnroar.com
# Email 3: info@shopnraor.com
# Password: 123456
# 'LOCATION': 'redis://[:bpl321]@147.135.11.131:6379',
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': 'redis://169.63.69.173:6379',
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             "PASSWORD": "bpl321"
#         }
#     }
# }

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://52.116.74.57:6379',
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "bpl321"
        }
    }
}


# ELASTICSEARCH_DSL = {
#     'default': {
#         'hosts': 'elasticsearch:9200'
#     },
# }

# from elasticsearch_dsl.connections import connections
ELASTICSEARCH_DSL = {
    'default': {
        'hosts': [
            # 'http://207.244.229.100:9200',
            'http://154.38.164.121:9200',
        ],
    },
}
# connections.configure(**ELASTICSEARCH_DSL)

# import hazelcast, logging
#hazel
# config = ClientConfig()
# config = hazelcast.ClientConfig()
# Hazelcast.Address is the hostname or IP address, e.g. 'localhost:5701'
# config.network_config.addresses.append('207.244.224.215:5701')
# config.network_config.addresses.append('45.137.192.156:5701')

#basic logging setup to see client logs
# logging.basicConfig()
# logging.getLogger().setLevel(logging.INFO)
# client = hazelcast.HazelcastClient(config)



""" To log all queries informations"""
# Configure logging for SQL queries
# logger = logging.getLogger('django.db.backends')
# logger.setLevel(logging.DEBUG)
# logger.addHandler(logging.StreamHandler())

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django.db.backends': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }



# CACHE_BACKEND = 'memcached://144.217.252.133:22211/'

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': '144.217.252.133:22211',
#     }
# }
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',  # Commented By Me
        'rest_framework_simplejwt.authentication.JWTAuthentication',

        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ),

    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.AllowAny'
        'rest_framework.permissions.IsAuthenticated',


        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ),
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination'
}

# REST_FRAMEWORK = {
#    # 'DEFAULT_PERMISSION_CLASSES': (
#    #     'rest_framework.permissions.IsAuthenticated',
#    # ),
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#
#         'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
#         'rest_framework_social_oauth2.authentication.SocialAuthentication',
#         'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
#
#     ),
# }



JWT_AUTH = {
'JWT_SECRET_KEY': SECRET_KEY,
'JWT_AUTH_HEADER_PREFIX': 'JWT',
'JWT_VERIFY_EXPIRATION': False,

}



import os

CORS_ORIGIN_ALLOW_ALL=True

CORS_ORIGIN_WHITELIST = (
    'http://localhost:4200',
    'http://www.shopnroar.com',
    # 'com.brainplow.shopnroar',
)

ALLOWED_HOSTS = ['127.0.0.1','localhost','apis.buynroar.com','213.136.72.25','backend.shopnroar.com','192.168.29.125','0.0.0.0','ns556432.ip-54-39-28.net','apis.shopnroar.com']
# print('ALLOWED_HOSTS: ', ALLOWED_HOSTS)
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (

    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'Content-Type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)
CORS_PREFLIGHT_MAX_AGE=86400



# SOCIAL_AUTH_LOGIN_ERROR_URL = '/settings/error'
# SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/settings/'


# SOCIAL_AUTH_RAISE_EXCEPTIONS = True

ROOT_URLCONF = 'SNR.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # 'social_django.context_processors.backends',  # <--
                # 'social_django.context_processors.login_redirect',  # <--
            ],
        },
    },
]


# SOCIAL_AUTH_PIPELINE = (
#     'social.pipeline.social_auth.social_details',
#     'social.pipeline.social_auth.social_uid',
#     'social.pipeline.social_auth.auth_allowed',
#     'social.pipeline.social_auth.social_user',
#     'social.pipeline.user.get_username',
#     'social.pipeline.mail.mail_validation',
#     'social.pipeline.social_auth.associate_by_email',
#     'social.pipeline.user.create_user',
#     'social.pipeline.social_auth.associate_user',
#     'social.pipeline.social_auth.load_extra_data',
#     'social.pipeline.user.user_details'
#
# )


# SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True
# SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
# 'https://www.googleapis.com/auth/userinfo.email',
# 'https://www.googleapis.com/auth/userinfo.profile'
# ]


# SOCIAL_AUTH_FACEBOOK_KEY = '384235361979008'  # App ID
# SOCIAL_AUTH_FACEBOOK_SECRET = '453f3caa70711ef8081ba0f22595a010'  # App Secret


# SOCIAL_AUTH_TWITTER_KEY = 'D82XFY9jLoVgsoUO3u7RuUVRl'
# SOCIAL_AUTH_TWITTER_SECRET = 'nzW4LByqAaQEOAJqvxPPT57Zwu9SJnOho3doih9P19hhvSz1L8'
#
# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '137858875633-seekn0v20aafb3h1fm738i2b4870s5r9.apps.googleusercontent.com'
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'eSAG4fvbYAjG0bs7bU2HzO5l'
#
# SOCIAL_AUTH_URL_NAMESPACE = 'social'
# AUTHENTICATION_BACKENDS = (
#     'social_core.backends.open_id.OpenIdAuth',
#     'social_core.backends.github.GithubOAuth2',
#     'social_core.backends.twitter.TwitterOAuth',
#     'social_core.backends.facebook.FacebookOAuth2',
#     'social_core.backends.google.GoogleOAuth2',
#     'social_core.backends.open_id.OpenIdAuth',
#     # 'social_core.backends.google.GoogleOAuth',
#     'social_core.backends.google.GoogleOpenId',
#
#     'django.contrib.auth.backends.ModelBackend',
# )
WSGI_APPLICATION = 'SNR.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'snr',
        'USER': 'abdullah',
        'PASSWORD': 'Bht#r467Hgf',
        'HOST': '45.137.192.158',
        'PORT': '5432',
    },
    # 'newdb': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'snr',
    #     'USER': 'abdullah',
    #     'PASSWORD': 'Bht#r467Hgf',
    #     # 'HOST': '35.227.60.45',
    #     # 'HOST': '35.229.25.217',  # Old One
    #     'HOST': '161.97.93.103',
    #     'PORT': '5432',
    #
    # },
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
# STATICFILES_DIRS = (
#     os.path.join(PROJECT_ROOT, 'static'),
# )

# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
#
# import dj_database_url
# DATABASES['default'] =  dj_database_url.config()


MEDIA_ROOT=os.path.join(BASE_DIR,'media')
MEDIA_URL='/media/'

TEMPLATES_DIRS=(os.path.join(BASE_DIR,"templates"),)


DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'